module[gbp]
{
    class[L3BehaviouralGroup;
          super=gbp/ForwardingBehavioralGroup;
          abstract]

    class[RoutingDomain;
          super=gbp/L3BehaviouralGroup;
          concrete]

    class[Subnet;
          super=gbp/L3BehaviouralGroup;
          concrete]
    {
        dependency[networkDomain;
                   cardinality=single;
                   ]
        {
            to[class=gbp/BridgeDomain;
               cardinality=many;
               ]

            to[class=gbp/FloodDomain;
               cardinality=many;
               ]

            to[class=gbp/RoutingDomain;
               cardinality=many;
               ]
        }
        named
        {
            parent[class=*;]
            {
                component[member=name]
            }
        }
    }

    class[Subnets;
          super=gbp/L3BehaviouralGroup;
          concrete]
    {
        named
        {
            parent[class=*;]
            {
                component[member=name]
            }
        }
    }

    contained[class=gbp/Subnet]
    {
        parent[class=gbp/Subnets]
    }
}