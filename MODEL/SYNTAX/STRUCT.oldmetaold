#
# use=...       directs to use other node parsing rule
# parser=...    directs to use specific java class for parsing
# generic       identifies that this parsing node has no functional behaviors and doesn't result in model items
# namespace=... optionally specifies in which namespace/package corresponding parsing behavior is if auto non-generic is used
#
metadata
{
    node<module>
    {
        qual<name>

        node<primitive;
             use=module/type>
        {
            node<const;
                 use=module/type/const>
            node<map-const;
                 use=module/type/map-const>
            node<remove-const;
                 use=module/type/remove-const>
            node<revertive-const;
                 use=module/type/revertive-const>
            node<transitive-const;
                 use=module/type/transitive-const>
            node<unsettable-const;
                 use=module/type/unsettable-const>
            node<default;
                 use=module/type/default>

            node<validate;
                 use=module/type/validate>
            {
                node<range;
                     use=module/type/validate/range>
                node<content;
                     use=module/type/validate/content>
                node<size;
                     use=module/type/validate/size>
            }

            node<hint; namespace=type>
            {
                qual<name>
            }

            node<language;
                 namespace=type>
            {
                qual<name>
            }
        }

        node<type>
        {
            qual<name>
            prop<super>

            node<const>
            {
                qual<name>
                prop<value>
                prop<target>
            }

            node<map-const;
                 use=module/type/const>
            node<remove-const;
                 use=module/type/const>
            node<revertive-const;
                 use=module/type/const>
            node<transitive-const;
                 use=module/type/const>
            node<unsettable-const;
                 use=module/type/const>
            node<default;
                 use=module/type/const>

            node<validate;
                 namespace=validation>
            {
                qual<name>
                node<range;
                     namespace=validation;
                     generic>
                node<content;
                     namespace=validation;
                     generic>
                node<size;
                     namespace=validation;
                     generic>
            }

            node<clobber-validate;
                 use=module/type/validate
                 >
            {
                node<range;
                     namespace=validation;
                     use=module/type/validate/range>
                node<content;
                     namespace=validation;
                     use=module/type/validate/content>
                node<size;
                     namespace=validation;
                     use=module/type/validate/size>
            }

            node<remove-validate;
                 use=module/type/validate
                 >
        }

        node<class; generic>
        {
            node<member; generic>
            {
                node<const; generic>
                node<validate; use=module/type/validate >
            }
        }
        node<contained; generic>
        node<named; generic>
        {
            node<rule; generic>
        }
    }
}